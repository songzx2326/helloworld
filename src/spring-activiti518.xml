<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="cn.songzx.helloworld.workflow.biz"></context:component-scan>
	<context:component-scan base-package="cn.songzx.helloworld.workflow.dao"></context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 加载activiti流程引擎的db.properties配置文件 -->
	<!-- 此流程引擎版本为：V5.18 -->
	<bean id="configActiviti518" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="location" value="classpath:db_activiti518.properties" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- 阿里druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<!-- 打开 removeAbandoned 功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 1800 秒，也就是 30 分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>

	<!-- 编写spring配置文件的配置多数源映射关系 -->
	<!-- <bean id="dataSource" class="cn.songzx.helloworld.workflow.dao.DynamicDataSource"> <property name="targetDataSources"> <map key-type="java.lang.String"> <entry key="activitiDataSourceVXviii" value-ref="activitiDataSourceVXviii" ></entry> <entry value-ref="testDataSource2" key="testDataSource2"></entry> </map> </property> <property name="defaultTargetDataSource" ref="activitiDataSourceVXviii"></property> </bean> -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 流程引擎数据主键生成策略：UUID -->
	<bean id="uuidGenerator" class="org.activiti.engine.impl.persistence.StrongUuidGenerator"></bean>

	<!-- spring初始化activiti流程引擎 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<!-- 制定要使用的数据库类型 -->
		<property name="databaseType" value="${databaseType}"></property>
		<!-- 设置流程引擎启动和关闭时数据库执行的策略 databaseSchemaUpdate 有以下三个值： "false" Activiti在启动时，会对比数据库中保存的版本，如果没有表或者版本不匹配，将在启动时抛出异常。 "true" Activiti在启动时，会对数据库中所有表进行更新，如果表不存在，则Activiti会自动创建。 "create-drop" Activiti在启动时会执行表的创建工作，在关闭时会执行表的删除工作。 开发阶段设置为：true -->
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="true" />
		<property name="enableDatabaseEventLogging" value="true" />
		<!-- 避免发布的图片和xml遇到中文时乱码 -->
		<property name="activityFontName" value="宋体" />
		<property name="labelFontName" value="宋体" />
		<!-- 解析xml流程文件所使用的字符集，默认为UTF-8，依据数据库来 -->
		<property name="xmlEncoding" value="${xmlEncoding}" />
		<property name="idGenerator" ref="uuidGenerator" />
	</bean>

	<!-- activiti流程引擎 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />

	<!-- 事务切面切入配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="transactionPointCut" expression="execution(* cn.songzx.helloworld.workflow.biz.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointCut" advice-ref="txAdvice" />
	</aop:config>


</beans>